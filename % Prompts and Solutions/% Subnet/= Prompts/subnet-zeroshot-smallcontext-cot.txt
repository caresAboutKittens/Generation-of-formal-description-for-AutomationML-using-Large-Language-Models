Your job is to formalize an excerpt from the AutomationML Whitepaper.

The Whitepaper excerpt defines constraints that an AML object should adhere to. Your job is to write the corresponding SHACL code for the Whitepaper excerpt.

The SHACL code should test whether an object conforms to the constraints defined in the Whitepaper excerpt.

Subnet Library Excerpt in AML (General structure of the object which will be testet):
"""
<?xml version="1.0" encoding="utf-8"?>
<CAEXFile>
    <RoleClass Name="Subnet" RefBaseClassPath="CommunicationRoleClassLib/LogicalNetwork">
        <Attribute Name="Type" AttributeDataType="xs:string"></Attribute>
        <Attribute Name="CustomAttributes">
            <RefSemantic CorrespondingAttributePath="ListType" />
            <Attribute Name="AttributeName1" AttributeDataType="xs:string"></Attribute>
            <Attribute Name="AttributeName2" AttributeDataType="xs:string"></Attribute>
        </Attribute>
        <ExternalInterface Name="LogicalEndPoint" RefBaseClassPath="CommunicationInterfaceClassLib/LogicalEndPoint" ID="3e661cba-acfc-43b8-a02b-14ad7061f137" />
    </RoleClass>
</CAEXFile>
"""

OWL Version of the Subnet Library Excerpt (General structure of the object which will be testet in OWL):
"""
<https://w3id.org/hsu-aut/AutomationML#Subnet%2FType>
        a       <https://w3id.org/hsu-aut/AutomationML#Attribute> ;
        <http://www.w3.org/2000/01/rdf-schema#label>
                "Type" ;
        <https://w3id.org/hsu-aut/AutomationML#hasAttributeDataType>
                "xs:string" ;
        <https://w3id.org/hsu-aut/AutomationML#hasDataType>
                "xs:string" ;
        <https://w3id.org/hsu-aut/AutomationML#hasName>
                "Type" .

<http://www.w3id.org/hsu-aut/MappingResult>
        a       <http://www.w3.org/2002/07/owl#Ontology> ;
        <http://www.w3.org/2002/07/owl#imports>
                <https://w3id.org/hsu-aut/AutomationML> .

<https://w3id.org/hsu-aut/AutomationML#Subnet%2FCustomAttributes%2FAttributeName1>
        a       <https://w3id.org/hsu-aut/AutomationML#Attribute> ;
        <http://www.w3.org/2000/01/rdf-schema#label>
                "AttributeName1" ;
        <https://w3id.org/hsu-aut/AutomationML#hasAttributeDataType>
                "xs:string" ;
        <https://w3id.org/hsu-aut/AutomationML#hasDataType>
                "xs:string" ;
        <https://w3id.org/hsu-aut/AutomationML#hasName>
                "AttributeName1" .

<https://w3id.org/hsu-aut/AutomationML#Subnet%2FCustomAttributes>
        a       <https://w3id.org/hsu-aut/AutomationML#Attribute> ;
        <http://www.w3.org/2000/01/rdf-schema#label>
                "CustomAttributes" ;
        <https://w3id.org/hsu-aut/AutomationML#hasName>
                "CustomAttributes" ;
        <https://w3id.org/hsu-aut/AutomationML#hasPart>
                <https://w3id.org/hsu-aut/AutomationML#Subnet%2FCustomAttributes%2FAttributeName2> , <https://w3id.org/hsu-aut/AutomationML#Subnet%2FCustomAttributes%2FAttributeName1> ;
        <https://w3id.org/hsu-aut/AutomationML#hasSemanticRef>
                <https://w3id.org/hsu-aut/AutomationML#ListType> .

<https://w3id.org/hsu-aut/AutomationML#3e661cba-acfc-43b8-a02b-14ad7061f137>
        a       <https://w3id.org/hsu-aut/AutomationML#ExternalInterface> , <https://w3id.org/hsu-aut/AutomationML#CommunicationInterfaceClassLib%2FLogicalEndPoint> ;
        <http://www.w3.org/2000/01/rdf-schema#label>
                "LogicalEndPoint" ;
        <https://w3id.org/hsu-aut/AutomationML#hasBaseInterfaceClass>
                <https://w3id.org/hsu-aut/AutomationML#CommunicationInterfaceClassLib%2FLogicalEndPoint> ;
        <https://w3id.org/hsu-aut/AutomationML#hasName>
                "LogicalEndPoint" ;
        <https://w3id.org/hsu-aut/AutomationML#hasRefBaseClass>
                <https://w3id.org/hsu-aut/AutomationML#CommunicationInterfaceClassLib%2FLogicalEndPoint> .

<https://w3id.org/hsu-aut/AutomationML#Subnet%2FCustomAttributes%2FAttributeName2>
        a       <https://w3id.org/hsu-aut/AutomationML#Attribute> ;
        <http://www.w3.org/2000/01/rdf-schema#label>
                "AttributeName2" ;
        <https://w3id.org/hsu-aut/AutomationML#hasAttributeDataType>
                "xs:string" ;
        <https://w3id.org/hsu-aut/AutomationML#hasDataType>
                "xs:string" ;
        <https://w3id.org/hsu-aut/AutomationML#hasName>
                "AttributeName2" .
"""

Whitepaper definition of Subnet (This document defines the actual constraints that should be adhered to):
"""
# Subnet

A “Subnet” is derived from a “LogicalNetwork” according to AutomationML Whitepaper -
Communication. It is defined as follows.

## Table 4 – Definition Subnet

### Role class name: Subnet

### Description: The role class “Subnet” shall be used in order to represent storing and managing of
properties and functionality of networks.

### Parent Class: CommunicationRoleClassLib/LogicalNetwork

### Path for Element reference: AutomationProjectConfigurationRoleClassLib/Subnet

### Attributes:

“Name” (AttributeDataType=”xs:string”):
The attribute “Name” defines the name of the
subnet.
Note: This attribute is modelled by the
standard attribute Name of the relevant CAEX
object.
This attribute is mandatory.

“Type” (AttributeDataType=”xs:string”):
The attribute “Type” defines the identifier of
the type of the subnet. The value of the type
is defined in the bus specific specification.
This attribute is mandatory.

“CustomAttributes” (ListType)[0..n]; “AttributeName” (AttributeDataType=”xs:string”):
The name of the CustomAttribute defines the
property name in the target system. The
value defines the value of this
CustomAttribute. The AttributeName is
mandatory if the attribute “CustomAttributes”
exists. The AttributeName shall be unique.
Mapping of several custom attributes with the
same name can only be made by making the
key unique by appending a counter like #1,
#2, #3. Custom Attributes can have simple or
complex data types. The description of
complex values can be found in 5.3.

### Interfaces “LogicalEndPoint”(RefBaseClassePath=”CommunicationInterfaceClassLib/LogicalEndPoint”):
This interface is used to link node elements
to a subnet. The direction of the link is
irrelevant. A Subnet has exactly one
LogicalEndpoint to connect the subnet to
Nodes.


Depending on the different communication systems and bus systems a Subnet may contain additional
attributes. These attributes and the bus specific parameters are described in separate bus
specifications. Please refer to these bus specifications for more information.
"""

Create the SHACL in Turtle (.ttl) syntax.

Create the corresponding SHACL. 

Let's think step by step.